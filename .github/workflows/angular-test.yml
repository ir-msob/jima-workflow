# This workflow sets up an environment to run tests for an Angular application.

name: Angular Test

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - id: Checkout
        name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Validate that the required directories exist
      - id: Validate_Directories
        name: Validate Directories
        run: |
          if [ ! -d "web" ] || [ ! -d "web/angular" ]; then
            echo "The required directories 'web' or 'web/angular' are missing. Exiting."
            echo "skip=true" >> $GITHUB_ENV
          fi

      # Step 3: Set up Node.js version 20
      - id: Setup_Node_20
        name: Set Up Node.js 20
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: web/angular/
          node-version: 20
          cache: 'npm'
          registry-url: ${{ vars.NPM_REPOSITORY_URL }}
        if: env.skip != 'true'  # Only run if skip is not true

      # Step 4: Cache NPM packages to improve build performance
      - id: Cache_NPM_Packages
        name: Cache NPM Packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.node-version }}-9.8.0-npmcache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        if: env.skip != 'true'  # Only run if skip is not true

      # Step 5: Install Angular CLI globally
      - id: Install_Angular_CLI
        name: Install Angular CLI
        working-directory: web/angular/
        run: npm install -g @angular/cli@latest

      # Step 6: Execute NPM tests for the Angular application
      - id: Run_NPM_Tests
        name: Execute NPM Tests
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REPOSITORY_TOKEN }} # Use the npm token for authentication
        working-directory: web/angular/
        run: npm run test
        if: env.skip != 'true'  # Only run if skip is not true