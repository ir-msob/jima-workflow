# This workflow is responsible for running Maven tests and generating reports.
# It utilizes SonarQube for code quality analysis.

name: Maven Test and Report

on:
  workflow_call:
    inputs:
      sonar_host_url:
        required: true
        type: string
      sonar_java_binaries:
        required: true
        type: string
      sonar_java_libraries:
        required: true
        type: string
      sonar_organization:
        required: true
        type: string
      sonar_project_key:
        required: true
        type: string
      sonar_coverage_jacoco_xml_report_paths:
        required: true
        type: string
      sonar_maven_plugin_version:
        required: true
        type: string
    secrets:
      sonar_token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - id: Checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Fetch all branches to ensure access to the latest code
      - id: Fetch_all_branches
        name: Fetch all branches
        run: git fetch --all

      # Step 3: Check for the presence of a POM file
      - id: Check_for_POM
        name: Check for POM file
        run: |
          if [ ! -f "pom.xml" ]; then
            echo "No Maven project found. Exiting without action."
            exit 0
          fi

      # Step 4: Set up JDK 21 for the build
      - id: Setup_JDK_21
        name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 5: Cache Maven packages to speed up future builds
      - id: Cache_Maven_Packages
        name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 6: Cache SonarCloud packages to improve performance
      - id: Cache_SonarCloud_Packages
        name: Cache SonarCloud Packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 7: Run Maven tests and SonarQube analysis
      - id: Run_Maven_Tests
        name: Run Maven Tests
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:${{ inputs.sonar_maven_plugin_version }}:sonar -Dsonar.host.url=${{ inputs.sonar_host_url }} -Dsonar.java.binaries=${{ inputs.sonar_java_binaries }} -Dsonar.java.libraries=${{ inputs.sonar_java_libraries }} -Dsonar.organization=${{ inputs.sonar_organization }} -Dsonar.projectKey=${{ inputs.sonar_project_key }} -Dsonar.coverage.jacoco.xmlReportPaths=${{ inputs.sonar_coverage_jacoco_xml_report_paths }} -P test,report,coverage